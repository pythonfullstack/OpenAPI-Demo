{
  "swagger": "2.0",
  "info": {
    "title": "SearchCloud-SaaS API",
    "description": "v0.1 of SearchCloud-SaaS API",
    "termsOfService": "https://www.searchstax.com/terms/",
    "contact": {
      "email": "support@searchstax.com"
    },
    "version": "0.1"
  },
  "host": "searchcloud.searchstax.co",
  "schemes": [
    "https"
  ],
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Token": {
      "type": "apiKey",
      "scheme": "Token",
      "name": "Authorization",
      "in": "header",
      "description": "Obtain Token - Valid for 24 hours (Supports Basic Auth):<br>https://app.searchstax.com/api/rest/docs/#api-rest-v2-obtain-auth-token-create<br><br>scheme: Token"
    }
  },
  "security": [
    {
      "Token": []
    }
  ],
  "paths": {
    "/{account_id}/environment": {
      "get": {
        "operationId": "1",
        "description": "This is the endpoint to get environments of an account.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Environment"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Environment"
        ],
        "summary": "Get Environments"
      },
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/{account_id}/index": {
      "get": {
        "operationId": "2",
        "description": "This Endpoint is to get indices of an account.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Index"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Index"
        ],
        "summary": "Get Indices"
      },
      "post": {
        "operationId": "3",
        "description": "This Endpoint is to create an index of an account.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Index"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          }
        },
        "tags": [
          "Index"
        ],
        "summary": "Create an Index"
      },
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/{account_id}/index/{id}": {
      "get": {
        "operationId": "4",
        "description": "This Endpoint is to get an index with its {id} of an account.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          }
        },
        "tags": [
          "Index"
        ],
        "summary": "Get an Index"
      },
      "delete": {
        "operationId": "5",
        "description": "This Endpoint is to delte an index with its {id} of an account.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Index"
        ],
        "summary": "Delete an Index"
      },
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/{account_id}/index/{index_id}/handler": {
      "get": {
        "operationId": "6",
        "description": "This Endpoint is to get handlers of an index of an account.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Handler"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Index"
        ],
        "summary": "Get Handlers of an Index"
      },
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "index_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/{account_id}/index/{index_id}/handler/{id}": {
      "get": {
        "operationId": "7",
        "description": "This Endpoint is to get a handler with its {id} of an index of an account.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Handler"
            }
          }
        },
        "summary": "Get a Handler of an Index",
        "tags": [
          "Index"
        ]
      },
      "put": {
        "operationId": "8",
        "description": "This Endpoint is to update a handler with its {id} of an index of an account.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Handler"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Handler"
            }
          }
        },
        "tags": [
          "Index"
        ],
        "summary": "Update a Handler of an Index"
      },
      "patch": {
        "operationId": "9",
        "description": "This Endpoint is to update values of a handler with its {id} of an index of an account.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Handler"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Handler"
            }
          }
        },
        "tags": [
          "Index"
        ],
        "summary": "Update fields of a Handler of an Index"
      },
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "index_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/{account_id}/index/{index_id}/token": {
      "get": {
        "operationId": "10",
        "description": "This Endpoint is to get tokens of an index of an account.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Token"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Index"
        ],
        "summary": "Get Tokens of an Index"
      },
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "index_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/{account_id}/index/{index_id}/token/{id}": {
      "get": {
        "operationId": "11",
        "description": "This Endpoint is to get a token of an index of an account.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          }
        },
        "tags": [
          "Index"
        ],
        "summary": "Get a Token of an Index"
      },
      "put": {
        "operationId": "12",
        "description": "This Endpoint is to update a token of an index of an account.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TokenUpdate"
            }
          }
        },
        "tags": [
          "Index"
        ],
        "summary": "Update a Token of an Index"
      },
      "patch": {
        "operationId": "13",
        "description": "This Endpoint is to update values of a token of an index of an account.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TokenUpdate"
            }
          }
        },
        "tags": [
          "Index"
        ],
        "summary": "Update fields of a Token of an Index"
      },
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "index_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/{account_id}/limit": {
      "get": {
        "operationId": "14",
        "description": "This Endpoint is to get limits of an index of an account.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Limit"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Limit"
        ],
        "summary": "Get Limits"
      },
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    }
  },
  "definitions": {
    "ApplicationVersion": {
      "required": [
        "version"
      ],
      "type": "object",
      "properties": {
        "application": {
          "title": "Application",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "title": "Version",
          "type": "string",
          "maxLength": 12,
          "minLength": 1
        }
      }
    },
    "Region": {
      "required": [
        "region_id",
        "country"
      ],
      "type": "object",
      "properties": {
        "cloud_provider": {
          "title": "Cloud provider",
          "type": "string",
          "readOnly": true
        },
        "region_id": {
          "title": "Region id",
          "type": "string",
          "maxLength": 32,
          "minLength": 1
        },
        "country": {
          "title": "Country",
          "type": "string",
          "enum": [
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CG",
            "CD",
            "CK",
            "CR",
            "CI",
            "HR",
            "CU",
            "CW",
            "CY",
            "CZ",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "VA",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IR",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "KP",
            "MK",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PS",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "RS",
            "SC",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "KR",
            "SS",
            "ES",
            "LK",
            "SD",
            "SR",
            "SJ",
            "SE",
            "CH",
            "SY",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "UM",
            "US",
            "UY",
            "UZ",
            "VU",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        }
      }
    },
    "Environment": {
      "required": [
        "sku",
        "name",
        "application_version",
        "region"
      ],
      "type": "object",
      "properties": {
        "sku": {
          "title": "Sku",
          "description": "Format: SSCLOUD-REGION_ID-APPLICATION-APPLICATION_VERSION (Ex: SSCLOUD-US-EAST-1-SOLR-8)",
          "type": "string",
          "maxLength": 32,
          "minLength": 1
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "x-nullable": true
        },
        "application_version": {
          "$ref": "#/definitions/ApplicationVersion"
        },
        "region": {
          "$ref": "#/definitions/Region"
        },
        "recommended": {
          "title": "Recommended",
          "type": "boolean"
        },
        "trial_available": {
          "title": "Trial available",
          "type": "boolean"
        }
      }
    },
    "IndexHandlerToken": {
      "required": [
        "key"
      ],
      "type": "object",
      "properties": {
        "key": {
          "title": "Key",
          "description": "Token Key for Authenticating with this handler",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "enabled": {
          "title": "Enabled",
          "description": "Enable/Disable this token key (Allow atleast 5 minutes for the changes to propagate) Ex: Can disable a key to temporarily disable access to the indexes if under maintenance",
          "type": "boolean"
        }
      }
    },
    "IndexHandler": {
      "description": "Available handlers for this index (Allow some time for handlers to be created if the index is in pending state)",
      "type": "object",
      "properties": {
        "handler": {
          "title": "Handler",
          "type": "string",
          "enum": [
            "select",
            "update"
          ],
          "readOnly": true
        },
        "api_endpoint": {
          "title": "Api endpoint",
          "type": "string",
          "readOnly": true
        },
        "require_auth": {
          "title": "Require auth",
          "description": "Require authentication on this handler (Allow atleast 5 minutes for the changes to propagate)",
          "type": "boolean"
        },
        "_locked_by_searchstax": {
          "title": "locked by searchstax",
          "description": "Handler locked by Searchstax (Internal: Searchstax may lock access to index for reasons such as select/update quota exceeded, rogue user etc)",
          "type": "boolean",
          "readOnly": true
        },
        "token": {
          "$ref": "#/definitions/IndexHandlerToken"
        }
      }
    },
    "Index": {
      "required": [
        "name",
        "environment_sku"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 80,
          "minLength": 1
        },
        "status": {
          "title": "Status",
          "description": "Index's current status (Allow some time for processing if the index is in ['pending', 'deleting'] states)",
          "type": "string",
          "enum": [
            "pending",
            "active",
            "deleting",
            "deleted"
          ],
          "readOnly": true
        },
        "environment_sku": {
          "title": "Environment sku",
          "description": "SKU of the environment for this index",
          "type": "string"
        },
        "handlers": {
          "description": "Available handlers for this index (Allow some time for handlers to be created if the index is in pending state)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IndexHandler"
          },
          "readOnly": true
        }
      }
    },
    "Handler": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "handler": {
          "title": "Handler",
          "type": "string",
          "enum": [
            "select",
            "update"
          ],
          "readOnly": true
        },
        "api_endpoint": {
          "title": "Api endpoint",
          "description": "HTTP endpoint for this handler",
          "type": "string",
          "readOnly": true
        },
        "require_auth": {
          "title": "Require auth",
          "description": "Require authentication on this handler (Allow atleast 5 minutes for the changes to propagate)",
          "type": "boolean"
        },
        "_locked_by_searchstax": {
          "title": "locked by searchstax",
          "description": "Handler locked by Searchstax (Internal: Searchstax may lock access to index for reasons such as select/update quota exceeded, rogue user etc)",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Token": {
      "required": [
        "handler"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "handler": {
          "title": "Handler",
          "type": "string"
        },
        "key": {
          "title": "Key",
          "description": "Token Key for Authenticating with this handler",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "enabled": {
          "title": "Enabled",
          "description": "Enable/Disable this token key (Allow atleast 5 minutes for the changes to propagate) Ex: Can disable a key to temporarily disable access to the indexes if under maintenance",
          "type": "boolean"
        }
      }
    },
    "TokenUpdate": {
      "required": [
        "key"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "handler": {
          "title": "Handler",
          "type": "string",
          "readOnly": true
        },
        "key": {
          "title": "Key",
          "type": "string",
          "minLength": 1
        },
        "enabled": {
          "title": "Enabled",
          "description": "Enable/Disable this token key (Allow atleast 5 minutes for the changes to propagate) Ex: Can disable a key to temporarily disable access to the indexes if under maintenance",
          "type": "boolean"
        },
        "regenerate_key": {
          "title": "Regenerate key",
          "description": "Regenerate key (Allow atleast 5 minutes for the changes to propagate)",
          "type": "boolean",
          "default": false
        }
      }
    },
    "Limit": {
      "required": [
        "max_indexes",
        "max_users"
      ],
      "type": "object",
      "properties": {
        "max_indexes": {
          "title": "Max indexes",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "max_users": {
          "title": "Max users",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "per_index_limits": {
          "title": "Per index limits",
          "type": "object",
          "readOnly": true
        }
      }
    }
  },
  "tags": [
    {
      "name": "Environment"
    },
    {
      "name": "Index"
    },
    {
      "name": "Limit"
    }
  ]
}